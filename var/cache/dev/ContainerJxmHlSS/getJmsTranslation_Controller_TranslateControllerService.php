<?php

namespace ContainerJxmHlSS;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getJmsTranslation_Controller_TranslateControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'jms_translation.controller.translate_controller' shared service.
     *
     * @return \JMS\TranslationBundle\Controller\TranslateController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'translation-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'TranslateController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'translation-bundle'.\DIRECTORY_SEPARATOR.'Translation'.\DIRECTORY_SEPARATOR.'ConfigFactory.php';

        $container->services['jms_translation.controller.translate_controller'] = $instance = new \JMS\TranslationBundle\Controller\TranslateController(($container->services['jms_translation.config_factory'] ?? ($container->services['jms_translation.config_factory'] = new \JMS\TranslationBundle\Translation\ConfigFactory([]))), ($container->privates['jms_translation.loader_manager'] ?? $container->load('getJmsTranslation_LoaderManagerService')), ($container->services['.container.private.twig'] ?? $container->get_Container_Private_TwigService()));

        $instance->setSourceLanguage('en');

        return $instance;
    }
}
