<?php

namespace ContainerXtGnqIO;


use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getJmsTranslation_Command_ExtractService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'jms_translation.command.extract' shared service.
     *
     * @return \JMS\TranslationBundle\Command\ExtractTranslationCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'console'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'Command.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'translation-bundle'.\DIRECTORY_SEPARATOR.'Command'.\DIRECTORY_SEPARATOR.'ExtractTranslationCommand.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'jms'.\DIRECTORY_SEPARATOR.'translation-bundle'.\DIRECTORY_SEPARATOR.'Translation'.\DIRECTORY_SEPARATOR.'ConfigFactory.php';

        $container->privates['jms_translation.command.extract'] = $instance = new \JMS\TranslationBundle\Command\ExtractTranslationCommand(($container->services['jms_translation.config_factory'] ?? ($container->services['jms_translation.config_factory'] = new \JMS\TranslationBundle\Translation\ConfigFactory([]))), ($container->services['jms_translation.updater'] ?? $container->load('getJmsTranslation_UpdaterService')), []);

        $instance->setName('translation:extract');

        return $instance;
    }
}
