<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Allusers extends \App\Entity\Allusers implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'id_user', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'test', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'Last_Name', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'Email', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'Birthday', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'password', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'salt', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'nationality', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'nickname', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'avatar', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'background', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'bio', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'demandetravails', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'artistepostulers', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'offretravails', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'challenges', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'posts', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'postLikes', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'tutoriels', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'views', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'ratings', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'participations', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'favorisTuroials', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'offretravailarchives', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'paniers', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'produits'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'id_user', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'test', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'Last_Name', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'Email', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'Birthday', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'password', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'salt', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'nationality', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'type', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'nickname', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'avatar', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'background', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'bio', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'demandetravails', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'artistepostulers', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'offretravails', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'challenges', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'posts', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'postLikes', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'tutoriels', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'views', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'ratings', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'participations', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'favorisTuroials', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'offretravailarchives', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'paniers', '' . "\0" . 'App\\Entity\\Allusers' . "\0" . 'produits'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Allusers $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getid_user(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getid_user();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getid_user', []);

        return parent::getid_user();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getTest(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTest', []);

        return parent::getTest();
    }

    /**
     * {@inheritDoc}
     */
    public function addTest(\App\Entity\Ban $test): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTest', [$test]);

        return parent::addTest($test);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTest(\App\Entity\Ban $test): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTest', [$test]);

        return parent::removeTest($test);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName(string $Last_Name): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$Last_Name]);

        return parent::setLastName($Last_Name);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $Email): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$Email]);

        return parent::setEmail($Email);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthday(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthday', []);

        return parent::getBirthday();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthday(\DateTimeInterface $Birthday): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthday', [$Birthday]);

        return parent::setBirthday($Birthday);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt(string $salt): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', [$salt]);

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function getNationality(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNationality', []);

        return parent::getNationality();
    }

    /**
     * {@inheritDoc}
     */
    public function setNationality(string $nationality): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNationality', [$nationality]);

        return parent::setNationality($nationality);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getNickname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNickname', []);

        return parent::getNickname();
    }

    /**
     * {@inheritDoc}
     */
    public function setNickname(string $nickname): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNickname', [$nickname]);

        return parent::setNickname($nickname);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatar(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatar', []);

        return parent::getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatar(string $avatar): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatar', [$avatar]);

        return parent::setAvatar($avatar);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackground(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackground', []);

        return parent::getBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackground(string $background): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackground', [$background]);

        return parent::setBackground($background);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getBio(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBio', []);

        return parent::getBio();
    }

    /**
     * {@inheritDoc}
     */
    public function setBio(string $bio): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBio', [$bio]);

        return parent::setBio($bio);
    }

    /**
     * {@inheritDoc}
     */
    public function getDemandetravails(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDemandetravails', []);

        return parent::getDemandetravails();
    }

    /**
     * {@inheritDoc}
     */
    public function addDemandetravail(\App\Entity\Demandetravail $demandetravail): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDemandetravail', [$demandetravail]);

        return parent::addDemandetravail($demandetravail);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDemandetravail(\App\Entity\Demandetravail $demandetravail): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDemandetravail', [$demandetravail]);

        return parent::removeDemandetravail($demandetravail);
    }

    /**
     * {@inheritDoc}
     */
    public function getArtistepostulers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArtistepostulers', []);

        return parent::getArtistepostulers();
    }

    /**
     * {@inheritDoc}
     */
    public function addArtistepostuler(\App\Entity\Artistepostuler $artistepostuler): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addArtistepostuler', [$artistepostuler]);

        return parent::addArtistepostuler($artistepostuler);
    }

    /**
     * {@inheritDoc}
     */
    public function removeArtistepostuler(\App\Entity\Artistepostuler $artistepostuler): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeArtistepostuler', [$artistepostuler]);

        return parent::removeArtistepostuler($artistepostuler);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffretravails(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffretravails', []);

        return parent::getOffretravails();
    }

    /**
     * {@inheritDoc}
     */
    public function addOffretravail(\App\Entity\Offretravail $offretravail): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOffretravail', [$offretravail]);

        return parent::addOffretravail($offretravail);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOffretravail(\App\Entity\Offretravail $offretravail): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOffretravail', [$offretravail]);

        return parent::removeOffretravail($offretravail);
    }

    /**
     * {@inheritDoc}
     */
    public function getChallenges(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChallenges', []);

        return parent::getChallenges();
    }

    /**
     * {@inheritDoc}
     */
    public function addChallenge(\App\Entity\Challenge $challenge): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChallenge', [$challenge]);

        return parent::addChallenge($challenge);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChallenge(\App\Entity\Challenge $challenge): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChallenge', [$challenge]);

        return parent::removeChallenge($challenge);
    }

    /**
     * {@inheritDoc}
     */
    public function getPosts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPosts', []);

        return parent::getPosts();
    }

    /**
     * {@inheritDoc}
     */
    public function addPost(\App\Entity\Post $post): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPost', [$post]);

        return parent::addPost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function removePost(\App\Entity\Post $post): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePost', [$post]);

        return parent::removePost($post);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\App\Entity\Comment $comment): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\App\Entity\Comment $comment): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostLikes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostLikes', []);

        return parent::getPostLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function addPostLike(\App\Entity\PostLike $postLike): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPostLike', [$postLike]);

        return parent::addPostLike($postLike);
    }

    /**
     * {@inheritDoc}
     */
    public function removePostLike(\App\Entity\PostLike $postLike): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePostLike', [$postLike]);

        return parent::removePostLike($postLike);
    }

    /**
     * {@inheritDoc}
     */
    public function getTutoriels(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTutoriels', []);

        return parent::getTutoriels();
    }

    /**
     * {@inheritDoc}
     */
    public function addTutoriel(\App\Entity\Tutoriel $tutoriel): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTutoriel', [$tutoriel]);

        return parent::addTutoriel($tutoriel);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTutoriel(\App\Entity\Tutoriel $tutoriel): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTutoriel', [$tutoriel]);

        return parent::removeTutoriel($tutoriel);
    }

    /**
     * {@inheritDoc}
     */
    public function getViews(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViews', []);

        return parent::getViews();
    }

    /**
     * {@inheritDoc}
     */
    public function addView(\App\Entity\View $view): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addView', [$view]);

        return parent::addView($view);
    }

    /**
     * {@inheritDoc}
     */
    public function removeView(\App\Entity\View $view): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeView', [$view]);

        return parent::removeView($view);
    }

    /**
     * {@inheritDoc}
     */
    public function getRatings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRatings', []);

        return parent::getRatings();
    }

    /**
     * {@inheritDoc}
     */
    public function addRating(\App\Entity\Rating $rating): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRating', [$rating]);

        return parent::addRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRating(\App\Entity\Rating $rating): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRating', [$rating]);

        return parent::removeRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getParticipations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParticipations', []);

        return parent::getParticipations();
    }

    /**
     * {@inheritDoc}
     */
    public function addParticipation(\App\Entity\Participation $participation): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addParticipation', [$participation]);

        return parent::addParticipation($participation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeParticipation(\App\Entity\Participation $participation): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeParticipation', [$participation]);

        return parent::removeParticipation($participation);
    }

    /**
     * {@inheritDoc}
     */
    public function getFavorisTuroials(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFavorisTuroials', []);

        return parent::getFavorisTuroials();
    }

    /**
     * {@inheritDoc}
     */
    public function addFavorisTuroial(\App\Entity\FavorisTuroial $favorisTuroial): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFavorisTuroial', [$favorisTuroial]);

        return parent::addFavorisTuroial($favorisTuroial);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFavorisTuroial(\App\Entity\FavorisTuroial $favorisTuroial): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFavorisTuroial', [$favorisTuroial]);

        return parent::removeFavorisTuroial($favorisTuroial);
    }

    /**
     * {@inheritDoc}
     */
    public function getOffretravailarchives(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOffretravailarchives', []);

        return parent::getOffretravailarchives();
    }

    /**
     * {@inheritDoc}
     */
    public function addOffretravailarchive(\App\Entity\Offretravailarchive $offretravailarchive): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOffretravailarchive', [$offretravailarchive]);

        return parent::addOffretravailarchive($offretravailarchive);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOffretravailarchive(\App\Entity\Offretravailarchive $offretravailarchive): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOffretravailarchive', [$offretravailarchive]);

        return parent::removeOffretravailarchive($offretravailarchive);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaniers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaniers', []);

        return parent::getPaniers();
    }

    /**
     * {@inheritDoc}
     */
    public function addPanier(\App\Entity\Panier $panier): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPanier', [$panier]);

        return parent::addPanier($panier);
    }

    /**
     * {@inheritDoc}
     */
    public function removePanier(\App\Entity\Panier $panier): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePanier', [$panier]);

        return parent::removePanier($panier);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduits(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduits', []);

        return parent::getProduits();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduit(\App\Entity\Produits $produit): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduit', [$produit]);

        return parent::addProduit($produit);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduit(\App\Entity\Produits $produit): \App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduit', [$produit]);

        return parent::removeProduit($produit);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
