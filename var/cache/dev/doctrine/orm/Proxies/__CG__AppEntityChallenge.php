<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Challenge extends \App\Entity\Challenge implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'id_challenge', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'date_c', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'pathimg', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'niveau', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'id_categorie', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'id_artist', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'ratings', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'participations'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'id_challenge', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'date_c', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'pathimg', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'niveau', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'id_categorie', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'id_artist', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'ratings', '' . "\0" . 'App\\Entity\\Challenge' . "\0" . 'participations'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Challenge $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateC(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateC', []);

        return parent::getDateC();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateC(\DateTimeInterface $date_c): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateC', [$date_c]);

        return parent::setDateC($date_c);
    }

    /**
     * {@inheritDoc}
     */
    public function getPathimg(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPathimg', []);

        return parent::getPathimg();
    }

    /**
     * {@inheritDoc}
     */
    public function setPathimg(string $pathimg): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPathimg', [$pathimg]);

        return parent::setPathimg($pathimg);
    }

    /**
     * {@inheritDoc}
     */
    public function getNiveau(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNiveau', []);

        return parent::getNiveau();
    }

    /**
     * {@inheritDoc}
     */
    public function setNiveau(int $niveau): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNiveau', [$niveau]);

        return parent::setNiveau($niveau);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCategorie(): ?\App\Entity\Category
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCategorie', []);

        return parent::getIdCategorie();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCategorie(?\App\Entity\Category $id_categorie): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCategorie', [$id_categorie]);

        return parent::setIdCategorie($id_categorie);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdArtist(): ?\App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdArtist', []);

        return parent::getIdArtist();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdArtist(?\App\Entity\Allusers $id_artist): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdArtist', [$id_artist]);

        return parent::setIdArtist($id_artist);
    }

    /**
     * {@inheritDoc}
     */
    public function getRatings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRatings', []);

        return parent::getRatings();
    }

    /**
     * {@inheritDoc}
     */
    public function addRating(\App\Entity\Rating $rating): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRating', [$rating]);

        return parent::addRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRating(\App\Entity\Rating $rating): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRating', [$rating]);

        return parent::removeRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getParticipations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParticipations', []);

        return parent::getParticipations();
    }

    /**
     * {@inheritDoc}
     */
    public function addParticipation(\App\Entity\Participation $participation): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addParticipation', [$participation]);

        return parent::addParticipation($participation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeParticipation(\App\Entity\Participation $participation): \App\Entity\Challenge
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeParticipation', [$participation]);

        return parent::removeParticipation($participation);
    }

}
