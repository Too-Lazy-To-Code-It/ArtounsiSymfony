<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Post extends \App\Entity\Post implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id_post', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id_user', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id_category', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'description_p', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'media', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'title_p', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'date_p', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'post_type', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'postLikes'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id_post', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id_user', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'id_category', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'description_p', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'media', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'title_p', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'date_p', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'post_type', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Post' . "\0" . 'postLikes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Post $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUser(): ?\App\Entity\Allusers
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUser', []);

        return parent::getIdUser();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', []);

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUser(?\App\Entity\Allusers $id_user): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUser', [$id_user]);

        return parent::setIdUser($id_user);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCategoryName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCategoryName', []);

        return parent::getIdCategoryName();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCategory(): ?\App\Entity\Category
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCategory', []);

        return parent::getIdCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCategory(?\App\Entity\Category $id_category): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCategory', [$id_category]);

        return parent::setIdCategory($id_category);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptionP(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptionP', []);

        return parent::getDescriptionP();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescriptionP(string $description_p): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescriptionP', [$description_p]);

        return parent::setDescriptionP($description_p);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', []);

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia(?string $media): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', [$media]);

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitleP(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitleP', []);

        return parent::getTitleP();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitleP(string $title_p): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitleP', [$title_p]);

        return parent::setTitleP($title_p);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateP(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateP', []);

        return parent::getDateP();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateP(\DateTimeInterface $date_p = NULL): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateP', [$date_p]);

        return parent::setDateP($date_p);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostType', []);

        return parent::getPostType();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostType(string $post_type): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostType', [$post_type]);

        return parent::setPostType($post_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function addComment(\App\Entity\Comment $comment): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComment', [$comment]);

        return parent::addComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComment(\App\Entity\Comment $comment): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComment', [$comment]);

        return parent::removeComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostLikes(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostLikes', []);

        return parent::getPostLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function addPostLike(\App\Entity\PostLike $postLike): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPostLike', [$postLike]);

        return parent::addPostLike($postLike);
    }

    /**
     * {@inheritDoc}
     */
    public function removePostLike(\App\Entity\PostLike $postLike): \App\Entity\Post
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePostLike', [$postLike]);

        return parent::removePostLike($postLike);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdPost(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdPost', []);

        return parent::getIdPost();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
